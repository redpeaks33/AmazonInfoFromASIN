<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ASINCode.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ImageColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ImageLinkColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="URL.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Category.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="AmazonRank.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Price_Japan.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        //+AP///jj///58///+/v///
</value>
  </data>
</root>